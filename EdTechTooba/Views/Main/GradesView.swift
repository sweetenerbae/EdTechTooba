import SwiftUI

struct GradesView: View {
    @StateObject var vm = GradesViewModel()

    var body: some View {
        NavigationStack {
            ScrollView {
                VStack(spacing: 16) {

                    // –ü–æ–∏—Å–∫ + –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫ (–∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω–µ)
                    HStack(spacing: 12) {
                        HStack {
                            Image(systemName: "magnifyingglass")
                                .foregroundStyle(.secondary)
                            TextField("–ü–æ–∏—Å–∫", text: $vm.searchText)
                        }
                        .padding(.vertical, 12)
                        .padding(.horizontal, 12)
                        .background(Color.cardGray)
                        .clipShape(RoundedRectangle(cornerRadius: 12))

                        Button {
                            // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                        } label: {
                            Image(systemName: "bell.fill")
                                .frame(width: 44, height: 44)
                                .background(Color.cardGray)
                                .clipShape(RoundedRectangle(cornerRadius: 12))
                        }
                    }
                    .padding(.horizontal, 16)

                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –∫—É–±–æ–∫
                    HStack(alignment: .top) {
                        VStack(alignment: .leading, spacing: 4) {
                            Text("–û—Ü–µ–Ω–∫–∏").font(.system(size: 28, weight: .heavy))
                            Text("–°—Ä–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ –ø—Ä–µ–¥–º–µ—Ç—ã")
                                .foregroundStyle(.secondary)
                        }
                        Spacer()
                        Text("üèÜ").font(.system(size: 44))
                    }
                    .padding(.horizontal, 16)

                    // –°–µ–≥–º–µ–Ω—Ç—ã
                    Picker("", selection: $vm.selectedTab) {
                        Text("–û—Ü–µ–Ω–∫–∏").tag(GradesViewModel.Tab.grades)
                        Text("–ü—Ä–æ–ø—É—Å–∫–∏").tag(GradesViewModel.Tab.skips)
                    }
                    .pickerStyle(.segmented)
                    .padding(.horizontal, 16)
                    .background(
                        RoundedRectangle(cornerRadius: 16).fill(Color.clear)
                    )

                    // –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                    VStack(spacing: 12) {
                        ForEach(vm.filteredItems) { item in
                            GradeRow(item: item)
                        }
                    }
                    .padding(.horizontal, 16)
                }
                .padding(.vertical, 12)
            }
            .background(Color("whiteAsset").ignoresSafeArea())
            .navigationTitle("") // –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–Ω—É—Ç—Ä–∏
            .navigationBarTitleDisplayMode(.inline)
        }
    }
}

private struct GradeRow: View {
    let item: SubjectGrade
    @State private var isExpanded = false

    var body: some View {
        VStack(spacing: 0) {
            HStack(spacing: 12) {
                Text(item.emoji).font(.system(size: 26))

                VStack(alignment: .leading, spacing: 2) {
                    Text(item.title).font(.headline)
                    Text(item.subtitle).font(.footnote).foregroundStyle(.secondary)
                }

                Spacer()

                Text(String(format: "%.1f", item.average))
                    .font(.headline).bold()
                    .foregroundStyle(.green)

                Image(systemName: isExpanded ? "chevron.up" : "chevron.down")
                    .foregroundStyle(.secondary)
            }
            .padding(.horizontal, 14)
            .padding(.vertical, 14)

            if isExpanded {
                // –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞—Å–∫—Ä—ã—Ç–∏—è ‚Äî –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ü–µ–Ω–∫–∏ –ø–æ —á–µ—Ç–≤–µ—Ä—Ç—è–º/—Å–µ–º–µ—Å—Ç—Ä–∞–º –∏ —Ç.–ø.
                VStack(alignment: .leading, spacing: 8) {
                    Divider()
                    Text("1 —á–µ—Ç–≤–µ—Ä—Ç—å: 4.5")
                    Text("2 —á–µ—Ç–≤–µ—Ä—Ç—å: 4.3")
                    Text("3 —á–µ—Ç–≤–µ—Ä—Ç—å: 4.7")
                    Text("4 —á–µ—Ç–≤–µ—Ä—Ç—å: 4.4")
                }
                .font(.footnote)
                .foregroundStyle(.secondary)
                .padding(14)
            }
        }
        .background(Color.cardGray)
        .clipShape(RoundedRectangle(cornerRadius: 20, style: .continuous))
        .onTapGesture { withAnimation(.easeInOut) { isExpanded.toggle() } }
    }
}
